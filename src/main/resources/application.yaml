spring:
  r2dbc:
    url: "r2dbc:postgresql://${db.host}/my_database"
    username: ${db.username}
    password: ${db.password}
  flyway:
    enabled: true
    locations: classpath:db/migration
    user: ${spring.r2dbc.username}
    password: ${spring.r2dbc.password}
    baseline-on-migrate: true
    url: "jdbc:postgresql://${db.host}:${db.port}/${db.database}"
  jackson:
    deserialization:
      fail-on-unknown-properties: false
    serialization:
      write-dates-as-timestamps: false
  application:
    name: regulus-maximus
  kafka:
    bootstrap-servers: ${kafka.brokers}
    security:
      protocol: ssl
    ssl:
      trust-store-location: file:${kafka.truststore.path}
      trust-store-type: JKS
      trust-store-password: ${kafka.credstore.password}
      key-store-location: file:${kafka.keystore.path}
      key-store-type: PKCS12
      key-store-password: ${kafka.credstore.password}
    topics:
      sykmeldinger-input: tsm.sykmelding-raw
      sykmeldinger-output: tsm.tsm-sykmeldinger
    consumer:
      properties:
        spring:
          json:
            trusted:
              packages: "*"
      max-poll-records: 1
      auto-offset-reset: earliest
      enable-auto-commit: false
      key-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      acks: all
    properties:
      spring.json.trusted.packages: "no.nav.tsm.mottak.sykmelding.kafka.model"
